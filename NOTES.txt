Status: working 


Title: Kubernetes Ingress Resources | Using Ingress resources to expose your application
URL: https://www.youtube.com/watch?v=8eCP3CK7BDQ
Github: https://github.com/viveksinghggits/library



After cloning to go branch 

    $ git checkout helm-repo-host 

    $ mkdir charts 

Package the existing chart 

    $ helm package helm -d charts

Generate index file 

    $ helm repo index charts 

    To manually generate shasum

    $ cd charts
    $ shasum -a 256 Library-0.1.0.tgz 

Publish charts publicly 

    Method 1: using github 

        $ git add charts/ helm/Chart.yaml 
        $ git commit -m "Create chart report" 
        $ git push origin helm-repo-host 

        Go Setting -> GitHub Pages 
            Source -> Branch: helm-repo-host  /root   -> Save 

        Result:
            Your site is ready to be published at  https://renegmed.github.io/library-playground/   This the helm repo 


Add Github helm repo to local environment 

    $ helm repo add library https://renegmed.github.io/library-playground/charts

    Use $ helm repo update to update existing old version of the same chart 



    $ helm install lib library/Library     
    NAME: lib
    LAST DEPLOYED: Fri Jul  9 20:02:07 2021
    NAMESPACE: default
    STATUS: deployed
    REVISION: 1
    NOTES:
    1. Get the application URL by running these commands:
      export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=Library,app.kubernetes.io/instance=lib" -o jsonpath="{.items[0].metadata.name}")
      echo "Visit http://127.0.0.1:8080 to use your application"
      kubectl --namespace default port-forward $POD_NAME 8080:80

    
    $ helm repo list 

    NAME    URL                                                 
     
    library https://renegmed.github.io/library-playground/charts


    See kubectl get ns, should see database and restapi namespaces 

    $ kubectl get pod -n database 

    $ kubectl get  pvc -n database 
    mysql pv claim is not bounded to pvc. Need to bind them 

    $ kubectl sc

    $ kubectl delete lib 


    $ helm install lib library/Library --set database.volume.storageClassName=do-block-storage 

    $ kubectl get pvc -n database 


Update database 

    $ kubectl exec -it pod/mysql-6df55bffdc-sd4sb -n database -- bin/bash 

        root@mysql-6df55bffdc-sd4sb:/# mysql -u root -p 

        root@mysql-6df55bffdc-sd4sb:/# create database library;

        root@mysql-6df55bffdc-sd4sb:/# use library;

        root@mysql-6df55bffdc-sd4sb:/# create table books (id varchar(100), name varchar(100), isbn varchar(100));

        root@mysql-6df55bffdc-sd4sb:/# insert into books values ("1", "The Everything Store", "ISBN-1");


Create port forward for restapi 

    $ kubectl port-forward svc/restapi -n restapi 8080

Test restapi 

    $ curl localhost:8080/apis/v1/books

    [{"Id":"1","Name":"The Everything Store","Isbn":"ISBN-1"}]

    $ curl -XPOST localhost:8080/apis/v1/books -d '{"Id":"2","Name":"The Lab Rat","Isbn":"ISBN-2"}'

    $ curl localhost:8080/apis/v1/books
    [{"Id":"1","Name":"The Everything Store","Isbn":"ISBN-1"},
     {"Id":"2","Name":"The Lab Rat","Isbn":"ISBN-2"}]

  
---------------------------------------------------------




$ helm install lib library/Library
NAME: lib
LAST DEPLOYED: Fri Jul  9 20:02:07 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=Library,app.kubernetes.io/instance=lib" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace default port-forward $POD_NAME 8080:80

            



----------------  Using Ingress resources to expose your application --------------------- 
 

 NOTE: using minikube, there is no need to install ingress controller
       Minikube provides its own ingress controller

		$ kubect get all -n kube-system 
		
  			pod/ingress-nginx-controller-558664778f-lkgt9   1/1     Running     9          29d

        $ kubectl addon list  - ingress should be enabled 


    $ make install-ingress 

    $ kubectl get ingress -n restapi 
    

    $ make post1 

    $ make list
